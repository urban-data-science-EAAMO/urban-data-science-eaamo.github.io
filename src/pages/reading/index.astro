---
import Layout from "@layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";

const papers: CollectionEntry<"projects">[] = (await getCollection(
  "projects",
  (entry: CollectionEntry<"projects">) => entry.data.category === "paper"
)).sort((a: CollectionEntry<"projects">, b: CollectionEntry<"projects">) =>
  a.data.pubDatetime > b.data.pubDatetime ? -1 : 1
);
---

<Layout title="Reading List | Urban Data Science & Equitable Cities" pageType="other">
  <main id="main-content" class="pt-24 join-container">
    <div class="join-header">
      <h1 class="join-title">Reading List</h1>
      <p class="join-subtitle">Papers and articles relevant to Urban Data Science & Equitable Cities.</p>
    </div>

    {papers.length === 0 ? (
      <p>No papers yet.</p>
    ) : (
      <ul class="reading-list">
        {papers.map(({ id, data }) => (
          <li class="reading-item">
            <div class="reading-title">
              {data.title}
              {data.venue && <span class="reading-venue"> Â· {data.venue}</span>}
            </div>
            <div class="reading-links">
              {data.pdf && <a class="underline" href={data.pdf} target="_blank" rel="noopener">PDF</a>}
              {data.site && <a class="underline" href={data.site} target="_blank" rel="noopener">Site</a>}
              {data.code && <a class="underline" href={data.code} target="_blank" rel="noopener">Code</a>}
            </div>
            {data.description && <p class="reading-desc">{data.description}</p>}
          </li>
        ))}
      </ul>
    )}
  </main>
</Layout>


